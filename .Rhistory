apply(counts, 2, sum)
apply(counts$number_of_flights, 2, sum)
sum(counts$number_of_flights)
latecounts <- flights %>% select(dest, dep_delay) %>% filter(dep_delay>15) %>% group_by(dest) %>% summarise(number_delayedFlights = n())
View(counts)
View(latecounts)
merge(counts, latecounts, by = 'dest')
counts <- merge(counts, latecounts, by = 'dest')
counts <- flights %>% select(dest, dep_delay) %>% group_by(dest) %>% summarise(number_of_flights = n())
counts <- merge(counts, latecounts, by = 'dest')
counts2 <- length(which(flights$dep_delay>15))
sum(latecounts$number_delayedFlights)
counts2 <- flights %>% select(dest, dep_delay) %>% group_by(dest) %>% length(which(dep_delay>15))
counts2 <- flights %>% select(dest, dep_delay) %>% group_by(dest) %>% summarise(number_of_flights = n(), number_late_flights = n(which(dep_delay>15)))
counts2 <- flights %>% select(dest, dep_delay) %>% mutate(late=dep_delay>15)
View(counts2)
counts2 %>% group_by(dest) %>% summarise(number_of_flights = n(), late_flights=sum(late))
counts <- flights %>% select(dest, dep_delay) %>% group_by(dest) %>% summarise(number_of_flights = n())
View(counts)
View(latecounts)
filter(counts, !dest %in% latecounts$dest)
View(counts)
counts2 %>% group_by(dest) %>% summarise(number_of_flights = n(), late_flights=sum(late, na.rm = T))
counts2 <- counts2 %>% group_by(dest) %>% summarise(number_of_flights = n(), late_flights=sum(late, na.rm = T))
View(counts2)
rm(list = ls())
data("flights")
knitr::opts_chunk$set(echo = TRUE)
flights <- flights %>% mutate(late=dep_delay>15)
counts <- flights %>% group_by(dest) %>% summarise(num_flights=n(), late_flights=sum(late, na.rm = T))
View(counts)
library(maps
)
map_states <- map_data()
map_states <- map_data('state')
View(map_states)
ggplot(data=map_states, aes(x=long, y=lat, group=group))+geom_path()
counts <- flights %>% group_by(dest, origin) %>% summarise(num_flights=n(), late_flights=sum(late, na.rm = T))
View(counts)
data("airports")
View(airports)
subset(airports, faa='ABQ')
subset(airports, faa=='ABQ')
airports %>% filter(faa==c('ABQ', 'JFK'))
airports %>% filter(faa %in% c('ABQ', 'JFK'))
line_coord <- airports %>% filter(faa %in% c('ABQ', 'JFK')) %>% select(lat, lon)
View(line_coord)
ggplot(data=map_states, aes(x=long, y=lat, group=group))+geom_path()
ggplot(data=map_states, aes(x=long, y=lat, group=group))+geom_path() + geom_line(data=line_coord, aes(x=lon, y=lat))
ggplot(data=map_states, aes(x=long, y=lat, group=group))+geom_path() + geom_line(x=line_coord$lon, y=line_coord$lat))
ggplot(data=map_states, aes(x=long, y=lat, group=group))+geom_path() + geom_line(x=line_coord$lon, y=line_coord$lat)
map('state')
points(x=line_coord$lon, y=line_coord$lat)
points(x=line_coord$lon, y=line_coord$lat, cex = 19)
points(x=line_coord$lon, y=line_coord$lat, cex = 20)
points(x=line_coord$lon, y=line_coord$lat)
points(x=line_coord$lon, y=line_coord$lat)
map('state')
?points
map('state')
points(x=line_coord$lon, y=line_coord$lat, pch = 19)
line(x=line_coord$lon, y=line_coord$lat)
line_coord$start_lat <- line_coord$lat
line_coord$start_lon <- line_coord$lon
line_coord$dest_lon <- line_coord$lon
line_coord$dest_lat <- line_coord$lat
line_coord <- line_coord %>% select(lat, lon)
dest <- line_coord[2,]
dest
line_coord <- line_coord[1,]
names(line_coord) <- c('start_lat', 'start_lon')
line_coord <- cbind(line_coord, dest)
names(line_coord) <- c('start_lat', 'start_lon', 'dest_lat', 'dest_lon')
line(x=c(line_coord$start_lat, line_coord$dest_lat), y=c(line_coord$start_lon, dest_lon))
line(x=c(line_coord$start_lat, line_coord$dest_lat), y=c(line_coord$start_lon, line_coord$dest_lon))
abline(x=c(line_coord$start_lat, line_coord$dest_lat), y=c(line_coord$start_lon, line_coord$dest_lon))
?line
myline <- line(x=c(line_coord$start_lat, line_coord$dest_lat), y=c(line_coord$start_lon, line_coord$dest_lon))
abline(coef(myline))
?abline
lines(x=c(line_coord$start_lat, line_coord$dest_lat), y=c(line_coord$start_lon, line_coord$dest_lon))
?lines
with(lines(x=c(start_lat, dest_lat), y = c(start_lon, dest_lon)))
with(line_coord, lines(x=c(start_lat, dest_lat), y = c(start_lon, dest_lon)))
with(line_coord, lines(x=c(start_lat, dest_lat), y = c(start_lon, dest_lon), type='l'))
line_coord <- airports %>% filter(faa %in% c('ABQ', 'JFK')) %>% select(lat, lon)
with(line_coord, lines(x=lat, y = lon))
?lines
?graphics
library(help='graphics')
?abline
with(line_coord, segments(x0=start_lat, x1=dest_lat, y0 = start_lon, y1=dest_lon))
with(line_coord, segments(x0=lat, y0 = lon))
with(line_coord, segments(lat, lon))
dest <- line_coord[2,]
start <- line_coord[1,]
names(dest) <- c('dest_lat', 'dest_lon')
names(start) <- c('start_lat', 'start_lon')
line_coord <- cbind(start, dest)
View(line_coord)
with(line_coord, segments(x0=start_lat, x1=dest_lat, y0=start_lon, y1=dest_lon))
with(line_coord, segments(x0=start_lat, x1=dest_lat, y0=start_lon, y1=dest_lon, lwd=5))
with(line_coord, segments(x0=start_lat, x1=dest_lat, y0=start_lon, y1=dest_lon, lwd=5, type='l'))
with(line_coord, segments(x0=start_lat, x1=dest_lat, y0=start_lon, y1=dest_lon))
with(line_coord, segments(x0=start_lat, x1=dest_lat, y0=start_lon, y1=dest_lon, type='l'))
?geom_path
line_coord_wide <- line_coord
line_coord <- airports %>% filter(faa %in% c('ABQ', 'JFK')) %>% select(lat, lon)
View(line_coord_wide)
View(line_coord)
ggplot(map_states, aes(x=long, y = lat, group=group)) + geom_path()
ggplot(map_states, aes(x=long, y = lat, group=group)) + geom_path() + geom_path(data = line_coord, aes(x = long, y = lat))
ggplot(map_states, aes(x=long, y = lat, group=group)) + geom_path() + geom_path(data = line_coord, aes(x = lon, y = lat))
ggplot(map_states, aes(x=long, y = lat, group=group)) + geom_path() + geom_line(data = line_coord, aes(x = lon, y = lat))
ggplot(data = line_coord, aes(x=lon, y=lat)) + geom_line()
with(line_coord_wide, segments(x0=start_lon, x1=dest_lon, y0=start_lat, y1=dest_lat))
with(line_coord_wide, segments(x0=start_lon, x1=dest_lon, y0=start_lat, y1=dest_lat))
with(line_coord_wide, segments(x0=start_lon, x1=dest_lon, y0=start_lat, y1=dest_lat))
with(line_coord, lines(x=lon, y=lat))
with(line_coord, plot(x=lon, y=lat, type='l'))
map('state')
with(line_coord, plot(x=lon, y=lat, type='l'))
map('state')
with(line_coord, plot(x=lon, y=lat, type='l'))
map('state')
with(line_coord, lines(x=lon, y=lat))
maps('state')
map('state')
map(database = 'state')
with(line_coord_wide, lines(x=c(start_lon, dest_lon), y=(start_lat, dest_lat))
with(line_coord_wide, lines(x=c(start_lon, dest_lon), y=(start_lat, dest_lat)))
with(line_coord_wide, lines(x=c(start_lon, dest_lon), y=c(start_lat, dest_lat)))
line_coord_wide$col <- 'green'
with(line_coord_wide, lines(x=c(start_lon, dest_lon), y=c(start_lat, dest_lat), col=col))
airports$dst
View(airports)
?airports
map('state')
text(x=state.center$x, y=state.center$y, state.abb)
plot.new()
map('state')
map('state')
map('state')
text(x=state.center$x, y=state.center$y, state.abb)
map('state')
text(x=state.center$x, y=state.center$y, state.abb)
map('state')
text(x=state.center$x, y=state.center$y, state.abb)
View(counts)
counts$prop_delay <- ifelse(with((late_flights/num_flights)>0.25, 'red', ifelse((late_flights/num_flights)>=0.2, 'orange', ifelse((late_flights/num_flights)>=0.15, 'blue', ifelse((late_flights/num_flights)>=0.1, 'purple', ifelse((late_flights/num_flights)<0.1, 'green'))))))
counts$prop_delay <- ifelse(with(counts(late_flights/num_flights)>0.25, 'red', ifelse((late_flights/num_flights)>=0.2, 'orange', ifelse((late_flights/num_flights)>=0.15, 'blue', ifelse((late_flights/num_flights)>=0.1, 'purple', ifelse((late_flights/num_flights)<0.1, 'green'))))))
counts$prop_delay <- ifelse(with(counts, (late_flights/num_flights)>0.25, 'red', ifelse((late_flights/num_flights)>=0.2, 'orange', ifelse((late_flights/num_flights)>=0.15, 'blue', ifelse((late_flights/num_flights)>=0.1, 'purple', ifelse((late_flights/num_flights)<0.1, 'green'))))))
counts$prop_delay <- ifelse(with(counts, (late_flights/num_flights)>0.25, yes='red', no=ifelse((late_flights/num_flights)>=0.2, yes='orange', no=ifelse((late_flights/num_flights)>=0.15, yes='blue', no=ifelse((late_flights/num_flights)>=0.1, yes='purple', no=ifelse((late_flights/num_flights)<0.1, yes='green'))))))
counts$prop_delay <- with(counts, ifelse((late_flights/num_flights)>0.25, yes='red', no=ifelse((late_flights/num_flights)>=0.2, yes='orange', no=ifelse((late_flights/num_flights)>=0.15, yes='blue', no=ifelse((late_flights/num_flights)>=0.1, yes='purple', no=ifelse((late_flights/num_flights)<0.1, yes='green'))))))
counts$prop_delay <- with(counts, ifelse((late_flights/num_flights)>0.25, yes='red', no=ifelse((late_flights/num_flights)>=0.2, yes='orange', no=ifelse((late_flights/num_flights)>=0.15, yes='blue', no=ifelse((late_flights/num_flights)>=0.1, yes='purple', no='green')))))
View(counts)
with(counts, late_flights/num_flights)
counts %>% mutate(prop=late_flights/num_flights)
View(airports)
counts <- flights %>% group_by(dest, origin) %>% summarise(num_flights=n(), late_flights=sum(late, na.rm = T)) %>% mutate(start_long=subset(airports, faa==counts$origin)$lon, dest_long=subset(airports, faa==counts$dest)$lon, start_lat=subset(airports, faa=counts$dest)$lat, dest_lat=subset(airports, faa=counts$dest)$lat)
counts <- flights %>% group_by(dest, origin) %>% summarise(num_flights=n(), late_flights=sum(late, na.rm = T)) %>% mutate(start_long=subset(airports, faa==counts$origin)$lon, dest_long=subset(airports, faa==counts$dest)$lon, start_lat=subset(airports, faa=counts$origin)$lat, dest_lat=subset(airports, faa=counts$dest)$lat)
subset(airports, faa=='JFK')$lon
subset(airports, faa=='ABQ')$lon
subset(airports, faa=='ABQ')$lat
counts <- flights %>% group_by(dest, origin) %>% summarise(num_flights=n(), late_flights=sum(late, na.rm = T)) %>% mutate(origin_long=airports[airports$faa==counts$origin, 4], dest_long=airports[airports$faa==counts$dest, 4], origin_lat=airports[airports$faa==counts$origin, 3], dest_lat=airports[airports$faa==counts$dest, 3])
subset(airports, faa %in% counts$dest | faa %in% counts$origin)
airports_loc <- subset(airports, faa %in% counts$dest | faa %in% counts$origin)[,3:4]
View(airports_loc)
airports_loc <- subset(airports, faa %in% counts$dest | faa %in% counts$origin)[,c(1,3:4)]
rm(airports)
counts <- flights %>% group_by(dest, origin) %>% summarise(num_flights=n(), late_flights=sum(late, na.rm = T)) %>% mutate(orlong=airports_loc[airports_loc$faa==counts$origin,3], destlong=airports_loc[airports_loc$faa==counts$dest,3], orlat=airports_loc[airports_loc$faa==counts$origin,2], destlat=airports_loc[airports_loc$faa==counts$dest,2])
View(counts)
counts %>% mutate(orlong=airports_loc$lon[which(airports_loc$faa==counts$origin)])
str(airports_loc)
unique(airports_loc$faa)
?match
match(counts$origin, airports_loc$faa)
counts %>% mutate(orlong=airports_loc$lon[match(counts$origin, airports_loc$faa)], destlong=airports_loc$lon[match(counts$dest, airports_loc$faa)], orlat=airports_loc$lat[match(counts$origin, airports_loc$faa)], destlat=airports_loc$lat[match(counts$origin, airports_loc$faa)])
# counts %>% mutate(orlong=airports_loc$lon[match(counts$origin, airports_loc$faa)], destlong=airports_loc$lon[match(counts$dest, airports_loc$faa)], orlat=airports_loc$lat[match(counts$origin, airports_loc$faa)], destlat=airports_loc$lat[match(counts$origin, airports_loc$faa)])
counts$orlong=airports_loc$lon[match(counts$origin, airports_loc$faa)]
# counts %>% mutate(orlong=airports_loc$lon[match(counts$origin, airports_loc$faa)], destlong=airports_loc$lon[match(counts$dest, airports_loc$faa)], orlat=airports_loc$lat[match(counts$origin, airports_loc$faa)], destlat=airports_loc$lat[match(counts$origin, airports_loc$faa)])
counts$orlong <- airports_loc$lon[match(counts$origin, airports_loc$faa)]
counts$destlong <- airports_loc$lon[match(counts$origin, airports_loc$faa)]
counts$destlong <- airports_loc$lon[match(counts$dest, airports_loc$faa)]
counts$orlat <- airports_loc$lat[match(counts$origin, airports_loc$faa)]
counts$destlat <- airports_loc$lat[match(counts$dest, airports_loc$faa)]
counts$orlong <- airports$lon[match(counts$origin, airports$faa)]
counts$destlong <- airports$lon[match(counts$dest, airports$faa)]
counts$orlat <- airports$lat[match(counts$origin, airports$faa)]
counts$destlat <- airports$lat[match(counts$dest, airports$faa)]
View(counts)
map('state')
lines(x=c(counts$orlong, counts$destlong), y=c(counts$orlat, counts$destlat))
text(x=state.center$x, y=state.center$y, state.abb)
lines(x=c(counts$orlong[1], counts$destlong[1]), y=c(counts$orlat[1], counts$destlat[1]))
map('state')
text(x=state.center$x, y=state.center$y, state.abb)
lines(x=c(counts$orlong[1], counts$destlong[1]), y=c(counts$orlat[1], counts$destlat[1]))
lines(x=c(counts$orlong[2], counts$destlong[2]), y=c(counts$orlat[2], counts$destlat[2]))
lines(x=c(counts$orlong[2], counts$destlong[2]), y=c(counts$orlat[2], counts$destlat[2]))
lines(x=c(counts$orlong[5], counts$destlong[5]), y=c(counts$orlat[5], counts$destlat[5]))
text(x=state.center$x, y=state.center$y, state.abb, cex = 0.4)
map('state')
text(x=state.center$x, y=state.center$y, state.abb, cex = 0.4)
map('state', width=480, height=480)
map('state', par(width=480, height=480))
map('state', par(mar=c(0.1, 0.1, 0.1, 0.1)))
map('state', par(mar=c(0.1, 0.1, 0.1, 0.1)))
map('state', xlim=c(-240, 240), ylim(-240, 240))
unique(counts$origin)
map('states')
map('state')
text(x=state.center$x, y=state.center$y, state.abb, cex = 0.4)
map('state')
text(x=state.center$x, y=state.center$y, state.abb, cex = 0.6)
for(i %in% c(1:20)){}
for(i %in% c(1:20)){
for(i in c(1:20)){
lines(x=c(counts$orlong[i], counts$destlong[i]), y=c(counts$orlat[i], counts$destlat[i]))
Sys.sleep(2) }
map('state')
for(i in 1:nrow(counts){
for(i in 1:nrow(counts)){
lines(x=c(counts$orlong[i], counts$destlong[i]), y=c(counts$orlat[i], counts$destlat[i]))
Sys.sleep(1) }
knitr::opts_chunk$set(echo = TRUE)
library(nycflights13)
library(maps)
data("flights")
data("airports")
airports_loc <- subset(airports, faa %in% counts$dest | faa %in% counts$origin)[,c(1,3:4)]
rm(airports_loc)
# airports_loc <- subset(airports, faa %in% counts$dest | faa %in% counts$origin)[,c(1,3:4)]
flights <- flights %>% mutate(late=dep_delay>15)
counts <- flights %>% group_by(dest, origin) %>% summarise(num_flights=n(), late_flights=sum(late, na.rm = T))
counts$orlong <- airports$lon[match(counts$origin, airports$faa)]
counts$destlong <- airports$lon[match(counts$dest, airports$faa)]
counts$orlat <- airports$lat[match(counts$origin, airports$faa)]
counts$destlat <- airports$lat[match(counts$dest, airports$faa)]
map('state')
map('state')
text(x=state.center$x, y=state.center$y, state.abb, cex=0.6)
map('state')
text(x=state.center$x, y=state.center$y, state.abb, cex=0.6)
for (i in 1:nrow(counts)){
lines(x=c(counts$orlong[i], counts$destlong[i]), y=c(counts$orlat[i], counts$destlat[i]))
}
map('state')
text(x=state.center$x, y=state.center$y, state.abb, cex=0.6)
for (i in 1:nrow(counts)){
lines(x=c(counts$orlong[i], counts$destlong[i]), y=c(counts$orlat[i], counts$destlat[i]), col=counts$prop_delay)
}
map('state')
text(x=state.center$x, y=state.center$y, state.abb, cex=0.6)
for (i in 1:nrow(counts)){
lines(x=c(counts$orlong[i], counts$destlong[i]), y=c(counts$orlat[i], counts$destlat[i]), col=counts$prop_delay[i])
}
?pch
?legend
?lty
View(counts)
legend('topright', col=c('red', 'orange', 'blue', 'purple', 'green'), legend=c('> 25%', '20% - 25%', '15% - 20%', '10% - 15%', '< 10%'))
legend('bottomleft', col=c('red', 'orange', 'blue', 'purple', 'green'), legend=c('> 25%', '20% - 25%', '15% - 20%', '10% - 15%', '< 10%'), lwd = 1)
knitr::opts_chunk$set(echo = TRUE)
library(nycflights13)
library(tidyverse)
library(maps)
data("flights")
data("airports")
# airports_loc <- subset(airports, faa %in% counts$dest | faa %in% counts$origin)[,c(1,3:4)]
flights <- flights %>% mutate(late=dep_delay>15)
counts <- flights %>% group_by(dest, origin) %>% summarise(num_flights=n(), late_flights=sum(late, na.rm = T))
counts$prop_delay <- with(counts, ifelse((late_flights/num_flights)>0.25, yes='red', no=ifelse((late_flights/num_flights)>=0.2, yes='orange', no=ifelse((late_flights/num_flights)>=0.15, yes='blue', no=ifelse((late_flights/num_flights)>=0.1, yes='purple', no='green')))))
counts$orlong <- airports$lon[match(counts$origin, airports$faa)]
counts$destlong <- airports$lon[match(counts$dest, airports$faa)]
counts$orlat <- airports$lat[match(counts$origin, airports$faa)]
counts$destlat <- airports$lat[match(counts$dest, airports$faa)]
# counts
map('state')
counts_byDay <- flights %>% group_by(month, day) %>% summarise(num_flights=n(), late_flights=sum(late, na.rm=T))
View(counts_byDay)
counts_byDay <- counts_byDay %>% mutate(date=paste(month, day, sep = '-'))
counts_byDay <- counts_byDay %>% select(date, num_flights, late_flights)
View(counts_byDay)
counts_byDay <- counts_byDay %>% select(-month)
View(counts_byDay)
counts_byDay[,-'month']
counts_byDay[,'month']
counts_byDay[,-'date']
counts_byDay[,'date']
counts_byDay[,!'date']
counts_byDay[,'-date']
counts_byDay[,c(-'date')]
counts_byDay %>% select(-month)
flights <- flights %>% mutate(date=paste(month, day, year, sep = '-'))
counts_byDay <- flights %>% group_by(date) %>% summarise(num_flights=n(), late_flights=sum(late, na.rm=T))
?as.Date
View(counts_byDay)
counts_byDay$date <- as.Date(counts_byDay$date, format='%m-%d-%Y')
counts_byDay <- counts_byDay %>% arrange(date)
with(counts_byDay, plot(x=date, y=num_flights))
with(counts_byDay, plot(x=date, y=num_flights))
with(counts_byDay, plot(x=date, y=late_flights))
with(counts_byDay, plot(x=date, y=num_flights), lwd=1)
with(counts_byDay, lines(x=date, y=num_flights))
with(counts_byDay, lines(x=date, y=num_flights), lines(x=date, y=late_flights))
with(counts_byDay, lines(x=date, y=num_flights, pch =19, cex=0.2), lines(x=date, y=late_flights))
with(counts_byDay, lines(x=date, y=num_flights, pch =19, cex=0.2))
with(counts_byDay, lines(x=date, y=num_flights, pch =19))
ggplot(data=counts_byDay) + geom_line(aes(x=date, y=num_flights))
ggplot(data=counts_byDay) + geom_line(aes(x=date, y=num_flights)) + geom_line(aes(x=date, y=late_flights))
ggplot(data=counts_byDay) + geom_line(aes(x=date, y=num_flights)) + geom_line(aes(x=date, y=late_flights), color='red')
ggplot(data=counts_byDay) + geom_line(aes(x=date, y=num_flights), color = 'blue') + geom_point() + geom_line(aes(x=date, y=late_flights), color='red')
ggplot(data=counts_byDay, aes(x=date, y=num_flights)) + geom_line(color = 'blue') +geom_point() + geom_line(aes(x=date, y=late_flights), color='red')
ggplot(data=counts_byDay, aes(x=date, y=num_flights)) + geom_line(color = 'blue') +geom_point(cex=0.2) + geom_line(aes(x=date, y=late_flights), color='red')
ggplot(data=counts_byDay, aes(x=date, y=num_flights)) + geom_line(color = 'blue') +geom_point(cex=0.3, color = 'blue') + geom_line(aes(x=date, y=late_flights), color='red')
ggplot(data=counts_byDay, aes(x=date, y=num_flights)) + geom_line(color = 'blue') +geom_point(cex=0.3, color = 'blue') + geom_col(aes(x=date, y=late_flights), color='red')
ggplot(data=counts_byDay, aes(x=date, y=num_flights)) + geom_line(color = 'blue') +geom_point(cex=0.3, color = 'blue') + geom_bar(aes(x=date, y=late_flights), color='red')
ggplot(data=counts_byDay, aes(x=date, y=num_flights)) + geom_line(color = 'blue') +geom_point(cex=0.3, color = 'blue') + geom_col(aes(x=date, y=late_flights), color='red')
ggplot(data=counts_byDay, aes(x=date, y=num_flights)) + geom_line(color = 'blue') +geom_point(cex=0.3, color = 'blue') + geom_line(aes(x=date, y=late_flights), color='red') + geom_point(aes(x=date, y=late_flights), color='red', cex = 0.3)
ggplot(data=counts_byDay, aes(x=date, y=num_flights)) + geom_line(color = 'blue') +geom_point(cex=0.3, color = 'blue') + geom_bar(aes(x=date, y=late_flights), color='red', stat='identity') + geom_point(aes(x=date, y=late_flights), color='red', cex = 0.3)
ggplot(data=counts_byDay, aes(x=date, y=num_flights)) + geom_line(color = 'blue') +geom_point(cex=0.3, color = 'blue') + geom_bar(aes(x=date, y=late_flights), color='red', stat='identity', width = 0.2) + geom_point(aes(x=date, y=late_flights), color='red', cex = 0.3)
ggplot(data=counts_byDay, aes(x=date, y=num_flights)) + geom_line(color = 'blue') +geom_point(cex=0.3, color = 'blue') + geom_bar(aes(x=date, y=late_flights), color='red', stat='identity', width = 0.05) + geom_point(aes(x=date, y=late_flights), color='red', cex = 0.3)
?labs
ggplot(data=counts_byDay, aes(x=date, y=num_flights)) + geom_line(color = 'blue') +geom_point(cex=0.3, color = 'blue') + geom_bar(aes(x=date, y=late_flights), color='red', stat='identity', width = 0.05) + geom_point(aes(x=date, y=late_flights), color='red', cex = 0.3) + theme(legend.key = c('blue', 'red'))
counts_byDay <- flights %>% group_by(date) %>% summarise(num_flights=n(), late_flights=sum(late, na.rm=T), late_mins=(sum(dep_delay, na.rm = T)))
library(tidyverse)
counts_byDay <- flights %>% group_by(date) %>% summarise(num_flights=n(), late_flights=sum(late, na.rm=T), late_mins=(sum(dep_delay, na.rm = T)))
View(counts_byDay)
counts_byDay$date <- as.Date(counts_byDay$date, format='%m-%d-%Y')
counts_byDay <- counts_byDay %>% arrange(date)
?months
counts_byDay %>% arrange(months(date))
View(counts_byDay %>% arrange(months(date)))
View(counts_byDay %>% group_by(months(date)) %>% summarise(mean(late_mins)))
View(counts_byDay %>% group_by(month = months(date)) %>% summarise(average_delay = mean(late_mins)))
avgdelay_month <- counts_byDay %>% group_by(month = months(date)) %>% summarise(average_delay = mean(late_mins))
ggplot(avgdelay_month, aes(x = month, y = average_delay)) + geom_line()
ggplot(avgdelay_month, aes(x = month, y = average_delay, group = month)) + geom_line()
ggplot(avgdelay_month, aes(x = month, y = average_delay)) + geom_bar(stat='identity')
ggplot(avgdelay_month, aes(x = month, y = average_delay)) + geom_line(stat='identity')
ggplot(avgdelay_month, aes(x = month, y = average_delay)) + geom_point()
ggplot(avgdelay_month, aes(x = month, y = average_delay)) + geom_point() + geom_line()
ggplot(avgdelay_month, aes(x = month, y = average_delay)) + geom_point() + geom_abline()
ggplot(avgdelay_month, aes(x = month, y = average_delay)) + geom_point() + geom_line(method = 'lm')
ggplot(avgdelay_month, aes(x = month, y = average_delay)) + geom_point() + geom_line(group = month)
ggplot(avgdelay_month, aes(x = month, y = average_delay)) + geom_point() + geom_line(aes(group = month))
ggplot(avgdelay_month, aes(x = month, y = average_delay, group = 1)) + geom_line()
ggplot(avgdelay_month, aes(x = month, y = average_delay, group = 1)) + geom_line() + geom_bar(stat = 'identity')
ggplot(avgdelay_month, aes(x = month, y = average_delay, group = 1)) + geom_line() + geom_point()
propnum_dest %>% select(dest, propnumlate) %>% arrange(desc(propnumlate))
knitr::opts_chunk$set(echo = TRUE)
library(nycflights13)
library(tidyverse)
library(maps)
data("flights")
data("airports")
flights <- flights %>% mutate(late=dep_delay>15)
counts <- flights %>% group_by(dest, origin) %>% summarise(num_flights=n(), late_flights=sum(late, na.rm = T))
counts$prop_delay <- with(counts, ifelse((late_flights/num_flights)>0.25, yes='red', no=ifelse((late_flights/num_flights)>=0.2, yes='orange', no=ifelse((late_flights/num_flights)>=0.15, yes='blue', no=ifelse((late_flights/num_flights)>=0.1, yes='purple', no='green')))))
counts$orlong <- airports$lon[match(counts$origin, airports$faa)]
counts$destlong <- airports$lon[match(counts$dest, airports$faa)]
counts$orlat <- airports$lat[match(counts$origin, airports$faa)]
counts$destlat <- airports$lat[match(counts$dest, airports$faa)]
map('state')
text(x=state.center$x, y=state.center$y, state.abb, cex=0.6)
for (i in 1:nrow(counts)){
lines(x=c(counts$orlong[i], counts$destlong[i]), y=c(counts$orlat[i], counts$destlat[i]), col=counts$prop_delay[i])
}
legend('bottomright', col=c('red', 'orange', 'blue', 'purple', 'green'), legend=c('> 25%', '20% - 25%', '15% - 20%', '10% - 15%', '< 10%'), lwd = 1)
title(main = '% of flight departures delayed > 15 minutes', sub = 'Origin: NYC Year: 2013')
flights <- flights %>% mutate(date=paste(month, day, year, sep = '-'))
counts_byDay <- flights %>% group_by(date) %>% summarise(num_flights=n(), late_flights=sum(late, na.rm=T), late_mins=(sum(dep_delay, na.rm = T)))
counts_byDay$date <- as.Date(counts_byDay$date, format='%m-%d-%Y')
counts_byDay <- counts_byDay %>% arrange(date)
counts_byDay_gathered <- counts_byDay %>% gather(c(num_flights, late_flights), key='countof', value='count')
ggplot(data = counts_byDay_gathered, aes(x=date, y=count, color = countof), color=c('red', 'blue')) + geom_line() + scale_color_discrete(limits=c('num_flights', 'late_flights'), labels=c("All Flights", "Late Flights (flights delayed by > 15 minutes")) + guides(color=guide_legend(title = NULL)) + theme(legend.position = 'top')
counts_by_airport <- flights %>% group_by(dest, origin) %>% summarise(num_flights=n(), late_flights=sum(late, na.rm=T), late_minutes=sum(dep_delay, na.rm = T))
propnum <- counts_by_airport %>% group_by(origin) %>% summarise(num_late=sum(late_flights), num_flights=sum(num_flights), late_mins=sum(late_minutes)) %>% mutate(propnumlate=num_late/num_flights)
propnum_gathered <- propnum %>% gather(c(num_late, num_flights), key=count_of, value = number)
ggplot(data = propnum_gathered, aes(x = origin, y = number, fill = count_of)) + geom_bar(stat='identity', position = 'dodge') + ggtitle('number of flights delayed, compared to total flights, by origin')
propnum %>% select(origin, propnumlate)
propnum_dest <- counts_by_airport %>% group_by(dest) %>% summarise(num_late=sum(late_flights), num_flights=sum(num_flights), late_mins=sum(late_minutes)) %>% mutate(propnumlate=num_late/num_flights)
propnum_dest_gathered <- propnum_dest %>% gather(c(num_late, num_flights), key=count_of, value = number)
ggplot(data = propnum_dest_gathered, aes(x = dest, y = number, fill = count_of)) + geom_bar(stat='identity', position = 'dodge') + theme(axis.text.x = element_text(angle=90), legend.position = 'bottom') + ggtitle('number of flights delayed, compared to total flights, by destination')
propnum_dest %>% select(dest, propnumlate) %>% arrange(desc(propnumlate))
avgdelay_month <- counts_byDay %>% group_by(month = months(date)) %>% summarise(average_delay = mean(late_mins))
ggplot(avgdelay_month, aes(x = month, y = average_delay, group = 1)) + geom_line() + geom_point()
ggplot(avgdelay_month, aes(x = month, y = average_delay, group = 1)) + geom_bar(stat = 'identity')
avgdelay_month %>% arrange(month)
?strptime
avgdelay_month %>% arrange(as.date(month, format = '%B')
)
avgdelay_month %>% arrange(as.Date(month, format = '%B'))
avgdelay_month %>% mutate(monthasmonth = as.Date(month, format = '%B'))
avgdelay_month %>% mutate(monthasmonth = strptime(month, format= '%B'))
avgdelay_month %>% mutate(monthasmonth = as.POSIXct(month, format= '%B'))
avgdelay_month %>% mutate(monthasmonth = factor(month, levels = c('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', October', 'November', 'December')))
avgdelay_month %>% mutate(monthasmonth = factor(month, levels = c('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December')))
avgdelay_month %>% mutate(monthasmonth = factor(month, levels = c('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'), ordered = T))
avgdelay_month %>% mutate(monthasmonth = factor(month, levels = c('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'), ordered = T))
avgdelay_month %>% mutate(monthasmonth = as.factor(month, levels = c('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'), ordered = T))
order(as.Date(c('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'), format = '%B'))
?order
sort(as.Date(c('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'), format = '%B'))
print(sort(as.Date(c('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'), format = '%B')))
rank(as.Date(c('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'), format = '%B'))
ordered(as.Date(c('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'), format = '%B'))
order(as.Date(c('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'), format = '%B'), value = T)
arrange(as.Date(c('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'), format = '%B'), value = T)
avgdelay_month <- counts_byDay %>% group_by(month = order(months(date))) %>% summarise(average_delay = mean(late_mins))
View(avgdelay_month)
avgdelay_month <- counts_byDay %>% group_by(month = months(date)) %>% summarise(average_delay = mean(late_mins))
?aggregate
aggregate(counts_byDay, by(months(date)), FUN = mean())
aggregate(counts_byDay, by(months(date)), FUN = 'mean')
aggregate(counts_byDay, by = months(date), FUN = 'mean')
aggregate(counts_byDay, by = months(counts_byDay$date), FUN = 'mean')
avgdelay_month
avgdelay_month$month <- factor(avgdelay_month$month, levels = c('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'))
avgdelay_month
ggplot(avgdelay_month, aes(x = month, y = average_delay, group = 1)) + geom_bar(stat = 'identity')
ggplot(avgdelay_month, aes(x = month, y = average_delay, group = month)) + geom_bar(stat = 'identity')
q('y')
q('Y')
q(save = 'yes')
library(tidyverse)
ggplot(avgdelay_month, aes(x = month, y = average_delay)) + geom_bar(stat = 'identity')
setwd('/media/umair/F00E03AB0E0369C4/projects/Arik/project2')
knitr::knit2html('NycFlights13_ArikRascovsky.Rmd')
rmarkdown::render('NycFlights13_ArikRascovsky.Rmd')
avgdelay_month$month <- factor(avgdelay_month$month, levels = c('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'))
ggplot(avgdelay_month, aes(x = month, y = average_delay)) + geom_bar(stat = 'identity')
ggplot(avgdelay_month, aes(x = month, y = average_delay, group = 12)) + geom_bar(stat = 'identity')
ggplot(avgdelay_month, aes(x = month, y = average_delay, group = month)) + geom_bar(stat = 'identity')
ggplot(avgdelay_month, aes(x = as.factor(month), y = average_delay)) + geom_bar(stat = 'identity')
ggplot(avgdelay_month, aes(x = as.factor(month), y = average_delay, group = as.factor(month))) + geom_bar(stat = 'identity')
knitr::opts_chunk$set(echo = TRUE)
avgdelay_month <- counts_byDay %>% group_by(month = order(months(date))) %>% summarise(average_delay = mean(late_mins))
# arranging months to make the graph look logical
avgdelay_month$month <- factor(avgdelay_month$month, levels = c('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'))
ggplot(avgdelay_month, aes(x = month, y = average_delay)) + geom_line() + geom_point()
ggplot(avgdelay_month, aes(x = month, y = average_delay)) + geom_bar(stat = 'identity')
avgdelay_month
avgdelay_month <- counts_byDay %>% group_by(month = order(months(date))) %>% summarise(average_delay = mean(late_mins))
avgdelay_month
View(counts_byDay)
avgdelay_month <- counts_byDay %>% group_by(month = months(date)) %>% summarise(average_delay = mean(late_mins))
View(avgdelay_month)
# arranging months to make the graph look logical
avgdelay_month$month <- factor(avgdelay_month$month, levels = c('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'))
ggplot(avgdelay_month, aes(x = month, y = average_delay)) + geom_line() + geom_point()
ggplot(avgdelay_month, aes(x = month, y = average_delay)) + geom_line() + geom_point()
ggplot(avgdelay_month, aes(x = month, y = average_delay)) + geom_bar(stat = 'identity')
ggplot(avgdelay_month, aes(x = month, y = average_delay, group = month)) + geom_line() + geom_point()
ggplot(avgdelay_month, aes(x = month, y = average_delay, group = month)) + geom_line()
ggplot(avgdelay_month, aes(x = month, y = average_delay, group = month)) + geom_path()
ggplot(avgdelay_month, aes(x = month, y = average_delay)) + geom_path()
View(avgdelay_month)
ggplot(avgdelay_month, aes(x = month, y = average_delay)) + geom_bar(stat = 'identity')
ggplot(avgdelay_month, aes(x = as.character(month), y = average_delay)) + geom_line()
ggplot(avgdelay_month, aes(x = as.character(month), y = average_delay)) + geom_line()
ggplot(avgdelay_month, aes(x = as.character(month), y = average_delay)) + geom_line(stat = 'identity')
ggplot(avgdelay_month, aes(x = month, y = average_delay, group = 12)) + geom_line()
ggplot(avgdelay_month, aes(x = month, y = average_delay)) + geom_bar(stat = 'identity')
avgdelay_month <- counts_byDay %>% group_by(month = months(date)) %>% summarise(average_delay = mean(late_mins))
# arranging months to make the graph look logical
avgdelay_month$month <- factor(avgdelay_month$month, levels = c('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'))
ggplot(avgdelay_month, aes(x = month, y = average_delay, group = 12)) + geom_line()
ggplot(avgdelay_month, aes(x = month, y = average_delay)) + geom_bar(stat = 'identity')
View(flights)
summary(flights$dep_delay)
hist(flights$dep_delay)
sd(flights$dep_delay)
sd(flights$dep_delay, na.rm = T)
simchi <- rchisq(10000, 6)
hist(simchi, main = 'positive skew')
simchi <- rchisq(336776, 6)
hist(simchi, main = 'positive skew')
simchi <- rchisq(336776, 12)
hist(simchi, main = 'positive skew')
simchi <- rchisq(336776, 2)
hist(simchi, main = 'positive skew')
hist(flights$dep_delay)
simchi <- rchisq(336776, 1)
hist(simchi, main = 'positive skew')
install.packages('skewt')
?rskt
library(skewt)
?rskt
simskew <- rskt(10000, 12, 5)
hist(simskew)
simskew <- rskt(10000, 1, 5)
hist(simskew)
simskew <- rskt(300000, 1, 5)
hist(simskew)
simskew <- rskt(300000, 3, 5)
simskew <- rskt(300000, 3, 5)
hist(simskew)
simskew <- rskt(300000, 3, 1)
hist(simskew)
simskew <- rskt(300000, 3, 10)
hist(simskew)
simskew <- rskt(300000, 10, 10)
hist(simskew)
simskew <- rskt(300000, 10, 7)
hist(simskew)
getwd()
setwd('/..')
getwd()
setwd("/media/umair/F00E03AB0E0369C4/projects/Arik")
source('MNIST_run.r')
